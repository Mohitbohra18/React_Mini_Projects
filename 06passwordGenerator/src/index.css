import {
  useState,
  useCallback,
  useEffect,
  useRef
}

from 'react'



function App() {
  const [length,
  setLength]=useState(8) const [numberAllowed,
  setNumberAllowed]=useState(false);
  const [charAllowed,
  setCharAllowed]=useState(false) const [password,
  setPassword]=useState("") //useRef hook

  const passwordRef=useRef(null) const passwordGenerator=useCallback(()=> {
      let pass=""
      let str="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
      if (numberAllowed) str +="0123456789"
      if (charAllowed) str +="!@#$%^&*-_+=[]{}~`"

      for (let i=1; i <=length; i++) {
        let char=Math.floor(Math.random() * str.length + 1) pass +=str.charAt(char)
      }

      setPassword(pass)
    }

    , [length, numberAllowed, charAllowed, setPassword]) const copyPasswordToClipboard=useCallback(()=> {
      passwordRef.current?.select();
      passwordRef.current?.setSelectionRange(0, 999);
      window.navigator.clipboard.writeText(password)
    }

    , [password]) useEffect(()=> {
      passwordGenerator()
    }

    , [length, numberAllowed, charAllowed, passwordGenerator]) return (<div className="w-full max-w-md mx-auto shadow-md rounded-lg px-4 py-3 my-8 bg-gray-800 text-orange-500" > <h1 className='text-white text-center my-3' >Password generator</h1> <div className="flex shadow rounded-lg overflow-hidden mb-4" > <input type="text"

    value= {
      password
    }

    className="outline-none w-full py-1 px-3"
    placeholder="Password"

    readOnly ref= {
      passwordRef
    }

    /> <button onClick= {
      copyPasswordToClipboard
    }

    className='outline-none bg-blue-700 text-white px-3 py-0.5 shrink-0'
    >copy</button> </div> <div className='flex text-sm gap-x-2' > <div className='flex items-center gap-x-1' > <input type="range"

    min= {
      6
    }

    max= {
      100
    }

    value= {
      length
    }

    className='cursor-pointer'

    onChange= {
      (e)=> {
        setLength(e.target.value)
      }
    }

    /> <label>Length: {
      length
    }

    </label> </div> <div className="flex items-center gap-x-1" > <input type="checkbox"

    defaultChecked= {
      numberAllowed
    }

    id="numberInput"

    onChange= {
      ()=> {
        setNumberAllowed((prev)=> !prev);
      }
    }

    /> <label htmlFor="numberInput" >Numbers</label> </div> <div className="flex items-center gap-x-1" > <input type="checkbox"
    defaultChecked= {
      charAllowed
    }

    id="characterInput"

    onChange= {
      ()=> {
        setCharAllowed((prev)=> !prev)
      }
    }

    /> <label htmlFor="characterInput" >Characters</label> </div> </div> </div>)
}

export default App













???????????????????????????????????????????







import { useCallback, useState } from 'react'


import './App.css'

function App() {
  const [length, setLength] = useState(8);
  const [numAllowed, setNumAllowed] = useState(false);
  const [charAllowed, setCharAllowed] = useState(false);
  const [password, setPassword] = useState("");

  // const passGenerator = () => {}
  // this function will be called multiple time so it will create a new password each time that will reduce the rendering speed 
  // so we use memoization to store the password in a variable and then return that variable.

  const passGenerator = useCallback(() => {
    let pass = "";
    let str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

    if (numAllowed) str += '0123456789';

    if (charAllowed) str += '!@#$%^&*()-_=+[]{}|;:,.<>?';

    for (let i = 1; i <= array.length; i++) {
      let indx = Math.floor(Math.random() * str.length + 1);
      pass += str.charAt(indx);

    }
  }, [length, numAllowed, charAllowed, setPassword]);


  return (
    <div className='bg-black h-full '>
      <div className='bg-fuchsia-600 rounded-2xl border-2 border-amber-200' >
        <h1 className='text-white text-5xl text-center font-extrabold ' >Password Generator</h1>
      </div>
      <div className='bg-emerald-400 h-screen rounded-4xl m-1.5 border-4 border-amber-200'>
        <div className='bg-gray-900 h-auto w-fit rounded-2xl  m-5 fl '>
          <input type="text"
            className='bg-white text-black text-2xl my-2 mx-1 p-2 rounded-2xl '
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button
            className='bg-blue-500 h-full w-fit text-2xl p-2 mx-2 font-extrabold rounded-4xl'
          >COPY</button>
        </div>
        <div className='flex flex-wrap justify-center'>
          <div className='bg-gray-900 h-auto w-fit rounded-2xl  m-5'>
            <input type="range"
              className='bg-white text-black text-2xl my-2 mx-1 p-2'
            />
          </div>
          <div className='bg-gray-900 h-auto w-fit rounded-2xl  m-5 p-2'>
            <input type="checkbox" name='num'
              className='bg-white text-white text-2xl my-2 mx-1 p-2'
            />
            <label htmlFor="num" className='text-white'>NUMBER</label>
          </div>
          <div className='bg-gray-900 h-auto w-fit rounded-2xl  m-5 p-2'>
            <input type="checkbox" name='char'
              className='bg-white text-black text-2xl my-2 mx-1 p-2'
            />
            <label htmlFor="char"
              className='text-white'
            >
              CHARACTERS
            </label>
          </div>
        </div>

      </div>
    </div>
  );




}

export default App
